{"name": "test_vwo_login_negative", "status": "skipped", "statusDetails": {"message": "XFAIL reason: Failed\n\n_pytest.outcomes.XFailed: Failed", "trace": "self = <test_vmo_login_pom.TestLogin object at 0x000002CD010A9D60>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8b1fa6bd0b1ff08f7aaed0edbe6808\")>\n\n    @allure.epic(\"VWO Login Test\")\n    @allure.feature(\"TC#0 - VWO App Negative Test\")\n    @pytest.mark.negative\n    @pytest.mark.usefixtures(\"setup\")\n    \n    def test_vwo_login_negative(self,setup):\n        try:\n            driver = setup\n            loginPage = LoginPage(driver)\n>           loginPage.login_to_vwo(usr=\"admin@admin@gmail.com\", pwd=\"admin\")\n\ntest_vmo_login_pom.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pageObjects\\loginPage.py:56: in login_to_vwo\n    self.get_username().send_keys(usr)\n..\\..\\pageObjects\\loginPage.py:39: in get_username\n    return self.driver.find_element(*LoginPage.username)      # * => current class\n..\\..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002CD010AA6C0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...52190379+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF461AE8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFF47EDBF6C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"login-username\"]\"}\nE         (Session info: chrome=135.0.7049.41); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7521A1F55+78133]\nE       \tGetHandleVerifier [0x00007FF7521A1FB0+78224]\nE       \t(No symbol) [0x00007FF751F691BA]\nE       \t(No symbol) [0x00007FF751FBF19D]\nE       \t(No symbol) [0x00007FF751FBF44C]\nE       \t(No symbol) [0x00007FF7520123D7]\nE       \t(No symbol) [0x00007FF751FE719F]\nE       \t(No symbol) [0x00007FF75200F21F]\nE       \t(No symbol) [0x00007FF751FE6F33]\nE       \t(No symbol) [0x00007FF751FB0358]\nE       \t(No symbol) [0x00007FF751FB10C3]\nE       \tGetHandleVerifier [0x00007FF75246BA8D+3001453]\nE       \tGetHandleVerifier [0x00007FF752465E72+2977874]\nE       \tGetHandleVerifier [0x00007FF75248497D+3103581]\nE       \tGetHandleVerifier [0x00007FF7521BC7EA+186826]\nE       \tGetHandleVerifier [0x00007FF7521C43FF+218591]\nE       \tGetHandleVerifier [0x00007FF7521A9D94+110452]\nE       \tGetHandleVerifier [0x00007FF7521A9F42+110882]\nE       \tGetHandleVerifier [0x00007FF752190379+5465]\nE       \tBaseThreadInitThunk [0x00007FFF461AE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFF47EDBF6C+44]\n\n..\\..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_vmo_login_pom.TestLogin object at 0x000002CD010A9D60>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8b1fa6bd0b1ff08f7aaed0edbe6808\")>\n\n    @allure.epic(\"VWO Login Test\")\n    @allure.feature(\"TC#0 - VWO App Negative Test\")\n    @pytest.mark.negative\n    @pytest.mark.usefixtures(\"setup\")\n    \n    def test_vwo_login_negative(self,setup):\n        try:\n            driver = setup\n            loginPage = LoginPage(driver)\n            loginPage.login_to_vwo(usr=\"admin@admin@gmail.com\", pwd=\"admin\")\n            time.sleep(5)\n            error_message = loginPage.get_error_message_text()\n            assert error_message == \"Yours email, password, IP address or location did not match\"\n        except Exception as e:\n>           pytest.xfail(\"Failed\")\nE           _pytest.outcomes.XFailed: Failed\n\ntest_vmo_login_pom.py:31: XFailed"}, "start": 1744114787017, "stop": 1744114787052, "uuid": "c87ae0a2-24d3-4fc6-a4e1-5d9ef6639cbd", "historyId": "69d752a7abe0ee8736382e42ae176568", "testCaseId": "69d752a7abe0ee8736382e42ae176568", "fullName": "tests.vmoLoginTests.pom_testclass.test_vmo_login_pom.TestLogin#test_vwo_login_negative", "labels": [{"name": "feature", "value": "TC#0 - VWO App Negative Test"}, {"name": "epic", "value": "VWO Login Test"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "tag", "value": "negative"}, {"name": "parentSuite", "value": "tests.vmoLoginTests.pom_testclass"}, {"name": "suite", "value": "test_vmo_login_pom"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-AVQG3N0"}, {"name": "thread", "value": "24116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.vmoLoginTests.pom_testclass.test_vmo_login_pom"}]}