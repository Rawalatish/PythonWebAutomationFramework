{"name": "test_vwo_login_positive", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@data-qa='lufexuloga']\"}\n  (Session info: chrome=135.0.7049.41); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6F8991F55+78133]\n\tGetHandleVerifier [0x00007FF6F8991FB0+78224]\n\t(No symbol) [0x00007FF6F87591BA]\n\t(No symbol) [0x00007FF6F87AF19D]\n\t(No symbol) [0x00007FF6F87AF44C]\n\t(No symbol) [0x00007FF6F88023D7]\n\t(No symbol) [0x00007FF6F87D719F]\n\t(No symbol) [0x00007FF6F87FF21F]\n\t(No symbol) [0x00007FF6F87D6F33]\n\t(No symbol) [0x00007FF6F87A0358]\n\t(No symbol) [0x00007FF6F87A10C3]\n\tGetHandleVerifier [0x00007FF6F8C5BA8D+3001453]\n\tGetHandleVerifier [0x00007FF6F8C55E72+2977874]\n\tGetHandleVerifier [0x00007FF6F8C7497D+3103581]\n\tGetHandleVerifier [0x00007FF6F89AC7EA+186826]\n\tGetHandleVerifier [0x00007FF6F89B43FF+218591]\n\tGetHandleVerifier [0x00007FF6F8999D94+110452]\n\tGetHandleVerifier [0x00007FF6F8999F42+110882]\n\tGetHandleVerifier [0x00007FF6F8980379+5465]\n\tBaseThreadInitThunk [0x00007FFF461AE8D7+23]\n\tRtlUserThreadStart [0x00007FFF47EDBF6C+44]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"61367a47541e4ed2fc5caea7648257c2\")>\n\n    @allure.epic(\"VWO Login Test\")\n    @allure.feature(\"TC#1 - VWO App Positive Test\")\n    @pytest.mark.positive\n    def test_vwo_login_positive(setup):\n        driver = setup\n        loginPage = LoginPage(driver)\n        loginPage.login_to_vwo(usr=\"atish@gmail.com\", pwd=\"Admin@123456\")\n        time.sleep(10)\n        dashboardPage = DashboardPage(driver)\n        assert \"Dashboard\" in driver.title\n>       assert \"Aman\" in dashboardPage.user_logged_in_text()\n\ntests\\vmoLoginTests\\test_vmo_login.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\pageObjects\\dashboardPage.py:21: in user_logged_in_text\n    return self.get_user_logged_in().text\ntests\\pageObjects\\dashboardPage.py:17: in get_user_logged_in\n    return self.driver.find_element(*DashboardPage.user_logged_in)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002AAF4DF6CC0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...F8980379+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF461AE8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFF47EDBF6C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@data-qa='lufexuloga']\"}\nE         (Session info: chrome=135.0.7049.41); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6F8991F55+78133]\nE       \tGetHandleVerifier [0x00007FF6F8991FB0+78224]\nE       \t(No symbol) [0x00007FF6F87591BA]\nE       \t(No symbol) [0x00007FF6F87AF19D]\nE       \t(No symbol) [0x00007FF6F87AF44C]\nE       \t(No symbol) [0x00007FF6F88023D7]\nE       \t(No symbol) [0x00007FF6F87D719F]\nE       \t(No symbol) [0x00007FF6F87FF21F]\nE       \t(No symbol) [0x00007FF6F87D6F33]\nE       \t(No symbol) [0x00007FF6F87A0358]\nE       \t(No symbol) [0x00007FF6F87A10C3]\nE       \tGetHandleVerifier [0x00007FF6F8C5BA8D+3001453]\nE       \tGetHandleVerifier [0x00007FF6F8C55E72+2977874]\nE       \tGetHandleVerifier [0x00007FF6F8C7497D+3103581]\nE       \tGetHandleVerifier [0x00007FF6F89AC7EA+186826]\nE       \tGetHandleVerifier [0x00007FF6F89B43FF+218591]\nE       \tGetHandleVerifier [0x00007FF6F8999D94+110452]\nE       \tGetHandleVerifier [0x00007FF6F8999F42+110882]\nE       \tGetHandleVerifier [0x00007FF6F8980379+5465]\nE       \tBaseThreadInitThunk [0x00007FFF461AE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFF47EDBF6C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "start": 1744097708720, "stop": 1744097722251, "uuid": "7433d1b4-9774-4ed1-8414-54af217a823b", "historyId": "63d4fc62e6fef6916bc8932609dcf640", "testCaseId": "63d4fc62e6fef6916bc8932609dcf640", "fullName": "tests.vmoLoginTests.test_vmo_login#test_vwo_login_positive", "labels": [{"name": "epic", "value": "VWO Login Test"}, {"name": "feature", "value": "TC#1 - VWO App Positive Test"}, {"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "tests.vmoLoginTests"}, {"name": "suite", "value": "test_vmo_login"}, {"name": "host", "value": "DESKTOP-AVQG3N0"}, {"name": "thread", "value": "25444-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.vmoLoginTests.test_vmo_login"}]}